<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!--
      Persistence and transaction management
    -->

    <!-- Looks for annotations like @Repository to configure exception handling via Spring -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <!-- This is where the entityManagerFactory comes from. As we use JPA, the HibernateJpaDialact is activated. -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
        <property name="persistenceUnitName" value="wiseuiPersistenceUnit"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Allows the use of @Transactional to configure transactions -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--
      Bean to bean mapping with Dozer
    -->

    <!-- Dozer bean mapper -->
    <bean id="dozerBeanMapper" class="org.dozer.DozerBeanMapper">
        <property name="mappingFiles">
            <list>
                <value>persistence-bean-mappings.xml</value>
            </list>
        </property>
    </bean>

    <!--
      Component auto-detection. Detects components via annotations, e.g. @Configuration, @Repository, @Service etc.
    -->
    <context:annotation-config/>
    <!--bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/-->
    <context:component-scan base-package="eu.wisebed.wiseui"/>

    <!--
      XML Marshalling configuration
    -->
    <bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller">
        <property name="mappingLocation" value="classpath:castor-mapping.xml"/>
    </bean>

    <bean id="testbedConfigurationDao" class="eu.wisebed.wiseui.persistence.dao.TestbedConfigurationDaoImpl">
        <constructor-arg index="0" value="classpath:testbed-configurations.xml"/>
        <property name="marshaller" ref="castorMarshaller"/>
        <property name="unmarshaller" ref="castorMarshaller"/>
        <property name="wrapper" ref="testbedConfigurationBoWrapper"/>
    </bean>

    <bean id="testbedConfigurationBoWrapper"
          class="eu.wisebed.wiseui.persistence.domain.TestbedConfigurationBoWrapper"/>

</beans>
